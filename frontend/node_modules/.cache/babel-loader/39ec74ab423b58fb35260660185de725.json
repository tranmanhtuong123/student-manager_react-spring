{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\giuakicdweb\\\\formweb-master\\\\src\\\\pages\\\\Forms.jsx\";\nimport React from 'react';\nimport '../css/form.css';\nimport { Form, Button, Checkbox, DatePicker, Input, Select, Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forms() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          labelCol: {\n            span: 10\n          },\n          wrapperCol: {\n            span: 14\n          },\n          onFinish: values => {\n            console.log({\n              values\n            });\n          },\n          onFinishFailed: error => {\n            console.log({\n              error\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"fullName\",\n            label: \"Full Name\",\n            rules: [{\n              required: true,\n              message: \"Please enter your name\"\n            }, {\n              whitespace: true\n            }, {\n              min: 3\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Type your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            label: \"Email\",\n            rules: [{\n              required: true,\n              message: \"Please enter your email\"\n            }, {\n              type: \"email\",\n              message: \"Please enter a valid email\"\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Type your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            label: \"Password\",\n            rules: [{\n              required: true\n            }, {\n              min: 6\n            }, {\n              validator: (_, value) => value && value.includes(\"A\") ? Promise.resolve() : Promise.reject(\"Password does not match criteria.\")\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: \"Type your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            dependencies: [\"password\"],\n            rules: [{\n              required: true\n            }, _ref => {\n              let {\n                getFieldValue\n              } = _ref;\n              return {\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\"The two passwords that you entered does not match.\");\n                }\n\n              };\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: \"Confirm your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"gender\",\n            label: \"Gender\",\n            requiredMark: \"optional\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select your gender\",\n              children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"dob\",\n            label: \"Date of Birth\",\n            rules: [{\n              required: true,\n              message: \"Please provide your date of birth\"\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              style: {\n                width: \"100%\"\n              },\n              picker: \"date\",\n              placeholder: \"Chose date of birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"website\",\n            label: \"Website\",\n            rules: [{\n              type: \"url\",\n              message: \"Please enter a valid url\"\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add your website url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"agreement\",\n            wrapperCol: {\n              span: 24\n            },\n            valuePropName: \"checked\",\n            rules: [{\n              validator: (_, value) => value ? Promise.resolve() : Promise.reject(\"To proceed, you need to agree with our terms and conditions\")\n            }],\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              children: [\" \", \"Agree to our \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Terms and Conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              span: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","Form","Button","Checkbox","DatePicker","Input","Select","Space","Forms","span","values","console","log","error","required","message","whitespace","min","type","validator","_","value","includes","Promise","resolve","reject","getFieldValue","width"],"sources":["C:/Users/PC/Desktop/giuakicdweb/formweb-master/src/pages/Forms.jsx"],"sourcesContent":["import React from 'react'\nimport '../css/form.css';\nimport { Form, Button, Checkbox, DatePicker, Input, Select, Space } from \"antd\";\nfunction Forms() {\n  return (\n    <div>\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <Form\n          autoComplete=\"off\"\n          labelCol={{ span: 10 }}\n          wrapperCol={{ span: 14 }}\n          onFinish={(values) => {\n            console.log({ values });\n          }}\n          onFinishFailed={(error) => {\n            console.log({ error });\n          }}\n        >\n          <Form.Item\n            name=\"fullName\"\n            label=\"Full Name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your name\",\n              },\n              { whitespace: true },\n              { min: 3 },\n            ]}\n            hasFeedback\n          >\n            <Input placeholder=\"Type your name\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your email\",\n              },\n              { type: \"email\", message: \"Please enter a valid email\" },\n            ]}\n            hasFeedback\n          >\n            <Input placeholder=\"Type your email\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n              },\n              { min: 6 },\n              {\n                validator: (_, value) =>\n                  value && value.includes(\"A\")\n                    ? Promise.resolve()\n                    : Promise.reject(\"Password does not match criteria.\"),\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password placeholder=\"Type your password\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirmPassword\"\n            label=\"Confirm Password\"\n            dependencies={[\"password\"]}\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"The two passwords that you entered does not match.\"\n                  );\n                },\n              }),\n            ]}\n            hasFeedback\n          >\n            <Input.Password placeholder=\"Confirm your password\" />\n          </Form.Item>\n\n          <Form.Item name=\"gender\" label=\"Gender\" requiredMark=\"optional\">\n            <Select placeholder=\"Select your gender\">\n              <Select.Option value=\"male\">Male</Select.Option>\n              <Select.Option value=\"female\">Female</Select.Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"dob\"\n            label=\"Date of Birth\"\n            rules={[\n              {\n                required: true,\n                message: \"Please provide your date of birth\",\n              },\n            ]}\n            hasFeedback\n          >\n            <DatePicker\n              style={{ width: \"100%\" }}\n              picker=\"date\"\n              placeholder=\"Chose date of birth\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"website\"\n            label=\"Website\"\n            rules={[{ type: \"url\", message: \"Please enter a valid url\" }]}\n            hasFeedback\n          >\n            <Input placeholder=\"Add your website url\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"agreement\"\n            wrapperCol={{ span: 24 }}\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value\n                    ? Promise.resolve()\n                    : Promise.reject(\n                        \"To proceed, you need to agree with our terms and conditions\"\n                      ),\n              },\n            ]}\n          >\n            <Checkbox>\n              {\" \"}\n              Agree to our <a href=\"#\">Terms and Conditions</a>\n            </Checkbox>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 24 }}>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </header>\n    </div>\n    </div>\n  )\n}\n\nexport default Forms"],"mappings":"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"},"metadata":{},"sourceType":"module"}